{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"Country": {
				"properties": {
					"alpha2Code": {
						"type": "string"
					},
					"alpha3Code": {
						"type": "string"
					},
					"region": {
						"type": "string"
					},
					"subregion": {
						"type": "string"
					},
					"commonName": {
						"type": "string"
					},
					"officialName": {
						"type": "string"
					}
				},
				"required": [
					"alpha2Code",
					"alpha3Code",
					"region",
					"subregion",
					"commonName",
					"officialName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Circuit": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"fullName": {
						"type": "string"
					},
					"previousNames": {
						"type": "string"
					},
					"type": {
						"type": "string",
						"enum": [
							"RACE",
							"ROAD",
							"STREET"
						]
					},
					"placeName": {
						"type": "string"
					},
					"country": {
						"$ref": "#/components/schemas/Country"
					},
					"latitude": {
						"type": "number",
						"format": "double",
						"description": "The latitude of the location"
					},
					"longitude": {
						"type": "number",
						"format": "double",
						"description": "The longitude of the location"
					}
				},
				"required": [
					"id",
					"name",
					"fullName",
					"previousNames",
					"type",
					"placeName",
					"country",
					"latitude",
					"longitude"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PageMetadata": {
				"properties": {
					"pageSize": {
						"type": "number",
						"format": "double"
					},
					"totalElements": {
						"type": "number",
						"format": "double"
					},
					"totalPages": {
						"type": "number",
						"format": "double"
					},
					"currentPage": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"pageSize",
					"totalElements",
					"totalPages",
					"currentPage"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Company": {
				"properties": {
					"id": {
						"type": "string"
					},
					"name": {
						"type": "string"
					},
					"fullName": {
						"type": "string"
					},
					"country": {
						"$ref": "#/components/schemas/Country"
					},
					"founder": {
						"type": "string"
					},
					"yearFounded": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"id",
					"name",
					"fullName",
					"country"
				],
				"type": "object",
				"additionalProperties": false
			},
			"CompanyQueryParams": {
				"properties": {
					"pageNo": {
						"type": "number",
						"format": "double",
						"description": "Page to retrieve, starting at 0",
						"default": "0"
					},
					"pageSize": {
						"type": "number",
						"format": "double",
						"description": "Size of the page to retrieve",
						"default": "10"
					},
					"specialty": {
						"type": "string",
						"enum": [
							"engine",
							"chassis"
						],
						"description": "Return only the companies that has manufactured in this specialty"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"PhotoSchema": {
				"allOf": [
					{
						"properties": {},
						"additionalProperties": {},
						"type": "object"
					},
					{
						"properties": {
							"CC": {
								"type": "number",
								"format": "double",
								"description": "The CC license version number (if not CC public domain)"
							},
							"CCType": {
								"type": "string",
								"enum": [
									"BY",
									"BY-SA",
									"BY-ND",
									"BY-NC",
									"BY-NC-ND",
									"Public Domain"
								],
								"description": "The CC license type."
							},
							"siteURL": {
								"type": "string",
								"description": "Web site where the photo is. Not to be confused with the URL of the photo itself. In this, in addition to the photo, there is usually other information such as the author, date of capture..."
							},
							"site": {
								"type": "string",
								"description": "Web site name of the URL provided."
							},
							"author": {
								"type": "string",
								"description": "Author name of the photo."
							},
							"description": {
								"type": "string",
								"description": "Description of the picture."
							},
							"url": {
								"type": "string",
								"description": "The URL of the photo."
							},
							"embedId": {
								"type": "number",
								"format": "double",
								"description": "ID of the image to embed via SmartFrame.io"
							}
						},
						"type": "object"
					}
				],
				"description": "A valid photo object, with license info."
			},
			"Driver": {
				"description": "Object that contains all the basic info about a driver",
				"properties": {
					"id": {
						"type": "string",
						"description": "The unique identifier."
					},
					"name": {
						"type": "string",
						"description": "The name."
					},
					"firstName": {
						"type": "string",
						"description": "The first name."
					},
					"lastName": {
						"type": "string",
						"description": "The last name."
					},
					"fullName": {
						"type": "string",
						"description": "The full name."
					},
					"abbreviation": {
						"type": "string",
						"description": "The abbreviation."
					},
					"permanentNumber": {
						"type": "string",
						"nullable": true,
						"description": "The permanent number."
					},
					"gender": {
						"type": "string",
						"enum": [
							"MALE",
							"FEMALE"
						],
						"description": "The gender."
					},
					"dateOfBirth": {
						"type": "string",
						"format": "date-time",
						"description": "The date of birth."
					},
					"dateOfDeath": {
						"type": "string",
						"format": "date-time",
						"nullable": true,
						"description": "The date of death."
					},
					"placeOfBirth": {
						"type": "string",
						"description": "The place of birth."
					},
					"countryOfBirth": {
						"$ref": "#/components/schemas/Country"
					},
					"nationalityCountry": {
						"$ref": "#/components/schemas/Country"
					},
					"secondNationalityCountry": {
						"$ref": "#/components/schemas/Country"
					},
					"photo": {
						"$ref": "#/components/schemas/PhotoSchema"
					}
				},
				"required": [
					"id",
					"name",
					"firstName",
					"lastName",
					"fullName",
					"abbreviation",
					"permanentNumber",
					"gender",
					"dateOfBirth",
					"dateOfDeath",
					"placeOfBirth",
					"countryOfBirth",
					"nationalityCountry"
				],
				"type": "object",
				"additionalProperties": false
			},
			"qualyFormat": {
				"enum": [
					"FOUR_LAPS",
					"TWO_SESSION",
					"ONE_SESSION",
					"ONE_LAP",
					"AGGREGATE",
					"KNOCKOUT",
					"ELIMINATION",
					"SPRINT_RACE"
				],
				"type": "string"
			},
			"GrandPrix": {
				"properties": {
					"id": {
						"type": "string",
						"description": "The unique identifier."
					},
					"name": {
						"type": "string",
						"description": "The name."
					},
					"fullName": {
						"type": "string"
					},
					"shortName": {
						"type": "string"
					},
					"countryId": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"fullName",
					"shortName",
					"countryId"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Event": {
				"properties": {
					"id": {
						"type": "string"
					},
					"raceDate": {
						"type": "string",
						"format": "date-time"
					},
					"name": {
						"type": "string"
					},
					"scheduledLaps": {
						"type": "number",
						"format": "double"
					},
					"qualyFormat": {
						"$ref": "#/components/schemas/qualyFormat"
					},
					"posterURL": {
						"type": "string"
					},
					"year": {
						"type": "number",
						"format": "double",
						"description": "The year (or F1 session) of the event. Obtained from the ID in the constructor."
					},
					"round": {
						"type": "number",
						"format": "double",
						"description": "The round number of the event in its year. Obtained from the ID in the constructor."
					},
					"circuit": {
						"$ref": "#/components/schemas/Circuit",
						"description": "The full circuit object. Got in the contructor"
					},
					"grandPrix": {
						"$ref": "#/components/schemas/GrandPrix",
						"description": "The full grand prix object. Got in the contructor"
					}
				},
				"required": [
					"id",
					"raceDate",
					"name",
					"scheduledLaps",
					"qualyFormat",
					"posterURL",
					"year",
					"round",
					"circuit",
					"grandPrix"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SeasonEntrant": {
				"properties": {
					"id": {
						"type": "string"
					},
					"season": {
						"type": "number",
						"format": "double"
					},
					"country": {
						"$ref": "#/components/schemas/Country"
					}
				},
				"required": [
					"id",
					"season",
					"country"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TyreManufacturer": {
				"properties": {
					"id": {
						"type": "string",
						"description": "The unique identifier."
					},
					"name": {
						"type": "string",
						"description": "The name."
					},
					"country": {
						"$ref": "#/components/schemas/Country"
					},
					"primaryColor": {
						"type": "string"
					},
					"secondaryColor": {
						"type": "string"
					}
				},
				"required": [
					"id",
					"name",
					"country",
					"primaryColor",
					"secondaryColor"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TimedSessionResult": {
				"description": "Common interface for timed sessions, like free practices, warm ups...",
				"properties": {
					"driver": {
						"$ref": "#/components/schemas/Driver",
						"description": "The full driver object. Got in the contructor"
					},
					"race": {
						"$ref": "#/components/schemas/Event",
						"description": "The full race event object. Got in the contructor"
					},
					"seasonEntrant": {
						"allOf": [
							{
								"$ref": "#/components/schemas/SeasonEntrant"
							}
						],
						"nullable": true
					},
					"entrantName": {
						"type": "string"
					},
					"chassisManufacturer": {
						"$ref": "#/components/schemas/Company"
					},
					"chassisName": {
						"type": "string"
					},
					"engineManufacturer": {
						"$ref": "#/components/schemas/Company"
					},
					"engineName": {
						"type": "string"
					},
					"tyreManufacturer": {
						"$ref": "#/components/schemas/TyreManufacturer"
					},
					"driverNumber": {
						"type": "number",
						"format": "double"
					},
					"note": {
						"type": "string"
					},
					"pos": {
						"type": "number",
						"format": "double"
					},
					"laps": {
						"type": "number",
						"format": "double"
					},
					"time": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"driver",
					"race",
					"seasonEntrant",
					"entrantName",
					"chassisManufacturer",
					"chassisName",
					"engineManufacturer",
					"tyreManufacturer",
					"pos",
					"time"
				],
				"type": "object",
				"additionalProperties": false
			},
			"OrderDir": {
				"type": "string",
				"enum": [
					"ASC",
					"DESC"
				]
			},
			"TimedSessionResultQueryParams": {
				"properties": {
					"pageNo": {
						"type": "number",
						"format": "double",
						"description": "Page to retrieve, starting at 0",
						"default": "0"
					},
					"pageSize": {
						"type": "number",
						"format": "double",
						"description": "Size of the page to retrieve",
						"default": "10"
					},
					"orderDir": {
						"$ref": "#/components/schemas/OrderDir",
						"description": "Order of the results"
					},
					"chassisManufacturerId": {
						"type": "string",
						"description": "If specified, the call will return only the results where the company that has this ID appears as the chassis manufacturer"
					},
					"engineManufacturerId": {
						"type": "string",
						"description": "If specified, the call will return only the results where the company that has this ID appears as the  engine manufacturer"
					},
					"eventId": {
						"type": "string",
						"description": "If specified, it will return only results relative to the event that has this ID"
					},
					"year": {
						"type": "number",
						"format": "double",
						"description": "If specified, it will return only results relative to this year's events"
					},
					"driverId": {
						"type": "string",
						"description": "If specified, it will return only results relative to the pilot having this ID"
					},
					"pos": {
						"type": "number",
						"format": "double"
					},
					"orderBy": {
						"type": "string",
						"enum": [
							"chassisManufacturerId",
							"engineManufacturerId",
							"pos",
							"eventId",
							"driverId",
							"time",
							"laps",
							"entrantName",
							"chassisName",
							"engineName",
							"driverNumber",
							"note",
							"seasonEntrantId",
							"tyreManufacturerId"
						],
						"nullable": false,
						"default": "eventId"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ErrorMessage_404_": {
				"properties": {
					"status": {
						"type": "number",
						"enum": [
							404
						],
						"nullable": false
					},
					"code": {
						"type": "string"
					},
					"details": {
						"type": "string"
					}
				},
				"required": [
					"status",
					"code",
					"details"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LapTime": {
				"properties": {
					"driver": {
						"$ref": "#/components/schemas/Driver",
						"description": "The full driver object. Got in the contructor"
					},
					"race": {
						"$ref": "#/components/schemas/Event",
						"description": "The full race event object. Got in the contructor"
					},
					"seasonEntrant": {
						"allOf": [
							{
								"$ref": "#/components/schemas/SeasonEntrant"
							}
						],
						"nullable": true
					},
					"entrantName": {
						"type": "string"
					},
					"chassisManufacturer": {
						"$ref": "#/components/schemas/Company"
					},
					"chassisName": {
						"type": "string"
					},
					"engineManufacturer": {
						"$ref": "#/components/schemas/Company"
					},
					"engineName": {
						"type": "string"
					},
					"tyreManufacturer": {
						"$ref": "#/components/schemas/TyreManufacturer"
					},
					"driverNumber": {
						"type": "number",
						"format": "double"
					},
					"note": {
						"type": "string"
					},
					"pos": {
						"type": "number",
						"format": "double",
						"description": "The position of the driver in the lap"
					},
					"time": {
						"type": "number",
						"format": "double",
						"description": "Time of this lap in ms"
					},
					"lap": {
						"type": "number",
						"format": "double",
						"description": "The lap number"
					}
				},
				"required": [
					"driver",
					"race",
					"seasonEntrant",
					"entrantName",
					"chassisManufacturer",
					"chassisName",
					"engineManufacturer",
					"tyreManufacturer",
					"pos",
					"time",
					"lap"
				],
				"type": "object",
				"additionalProperties": false
			},
			"LapQueryParams": {
				"properties": {
					"pageNo": {
						"type": "number",
						"format": "double",
						"description": "Page to retrieve, starting at 0",
						"default": "0"
					},
					"pageSize": {
						"type": "number",
						"format": "double",
						"description": "Size of the page to retrieve",
						"default": "10"
					},
					"orderDir": {
						"$ref": "#/components/schemas/OrderDir",
						"description": "Order of the results"
					},
					"chassisManufacturerId": {
						"type": "string",
						"description": "If specified, the call will return only the results where the company that has this ID appears as the chassis manufacturer"
					},
					"engineManufacturerId": {
						"type": "string",
						"description": "If specified, the call will return only the results where the company that has this ID appears as the  engine manufacturer"
					},
					"eventId": {
						"type": "string",
						"description": "If specified, it will return only results relative to the event that has this ID"
					},
					"year": {
						"type": "number",
						"format": "double",
						"description": "If specified, it will return only results relative to this year's events"
					},
					"driverId": {
						"type": "string",
						"description": "If specified, it will return only results relative to the pilot having this ID"
					},
					"pos": {
						"type": "number",
						"format": "double"
					},
					"lap": {
						"type": "number",
						"format": "double"
					},
					"orderBy": {
						"type": "string",
						"enum": [
							"chassisManufacturerId",
							"engineManufacturerId",
							"pos",
							"eventId",
							"driverId",
							"time",
							"entrantName",
							"chassisName",
							"engineName",
							"driverNumber",
							"note",
							"seasonEntrantId",
							"tyreManufacturerId",
							"lap"
						],
						"nullable": false,
						"default": "eventId"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"PitStop": {
				"properties": {
					"driver": {
						"$ref": "#/components/schemas/Driver",
						"description": "The full driver object. Got in the contructor"
					},
					"race": {
						"$ref": "#/components/schemas/Event",
						"description": "The full race event object. Got in the contructor"
					},
					"seasonEntrant": {
						"allOf": [
							{
								"$ref": "#/components/schemas/SeasonEntrant"
							}
						],
						"nullable": true
					},
					"entrantName": {
						"type": "string"
					},
					"chassisManufacturer": {
						"$ref": "#/components/schemas/Company"
					},
					"chassisName": {
						"type": "string"
					},
					"engineManufacturer": {
						"$ref": "#/components/schemas/Company"
					},
					"engineName": {
						"type": "string"
					},
					"tyreManufacturer": {
						"$ref": "#/components/schemas/TyreManufacturer"
					},
					"driverNumber": {
						"type": "number",
						"format": "double"
					},
					"note": {
						"type": "string"
					},
					"pitStopLap": {
						"type": "number",
						"format": "double",
						"description": "The lap of the race in which the pit stop happened"
					},
					"time": {
						"type": "number",
						"format": "double",
						"description": "Time of this pit stops in ms. The time is counted from the moment the pilot crosses the line of the pits until he leaves them."
					},
					"timeOfDay": {
						"type": "string",
						"description": "The time of the day of the pit stop."
					},
					"annotation": {
						"type": "string",
						"nullable": true,
						"description": "Some notes about the pit stop."
					}
				},
				"required": [
					"driver",
					"race",
					"seasonEntrant",
					"entrantName",
					"chassisManufacturer",
					"chassisName",
					"engineManufacturer",
					"tyreManufacturer",
					"pitStopLap",
					"time",
					"timeOfDay",
					"annotation"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PitStopQueryParams": {
				"properties": {
					"pageNo": {
						"type": "number",
						"format": "double",
						"description": "Page to retrieve, starting at 0",
						"default": "0"
					},
					"pageSize": {
						"type": "number",
						"format": "double",
						"description": "Size of the page to retrieve",
						"default": "10"
					},
					"orderDir": {
						"$ref": "#/components/schemas/OrderDir",
						"description": "Order of the results"
					},
					"chassisManufacturerId": {
						"type": "string",
						"description": "If specified, the call will return only the results where the company that has this ID appears as the chassis manufacturer"
					},
					"engineManufacturerId": {
						"type": "string",
						"description": "If specified, the call will return only the results where the company that has this ID appears as the  engine manufacturer"
					},
					"eventId": {
						"type": "string",
						"description": "If specified, it will return only results relative to the event that has this ID"
					},
					"year": {
						"type": "number",
						"format": "double",
						"description": "If specified, it will return only results relative to this year's events"
					},
					"driverId": {
						"type": "string",
						"description": "If specified, it will return only results relative to the pilot having this ID"
					},
					"lap": {
						"type": "number",
						"format": "double"
					},
					"orderBy": {
						"type": "string",
						"enum": [
							"chassisManufacturerId",
							"engineManufacturerId",
							"eventId",
							"driverId",
							"time",
							"entrantName",
							"chassisName",
							"engineName",
							"driverNumber",
							"note",
							"seasonEntrantId",
							"tyreManufacturerId",
							"pitStopLap",
							"timeOfDay",
							"annotation"
						],
						"nullable": false,
						"default": "eventId"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"EventQueryParams": {
				"properties": {
					"pageNo": {
						"type": "number",
						"format": "double",
						"description": "Page to retrieve, starting at 0",
						"default": "0"
					},
					"pageSize": {
						"type": "number",
						"format": "double",
						"description": "Size of the page to retrieve",
						"default": "10"
					},
					"orderDir": {
						"$ref": "#/components/schemas/OrderDir",
						"description": "Order of the results"
					},
					"circuitId": {
						"type": "string"
					},
					"year": {
						"type": "number",
						"format": "double"
					},
					"orderBy": {
						"type": "string",
						"enum": [
							"id",
							"name",
							"raceDate",
							"scheduledLaps",
							"qualyFormat",
							"posterURL",
							"circuitId",
							"grandPrixId"
						],
						"nullable": false,
						"default": "id"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"EventDriverData": {
				"description": "Object that represents a driver and an event of his that has occurred within an event. For example, his results in one of the sessions, the time he has set in a race lap, or a pit stop.",
				"properties": {
					"driver": {
						"$ref": "#/components/schemas/Driver",
						"description": "The full driver object. Got in the contructor"
					},
					"race": {
						"$ref": "#/components/schemas/Event",
						"description": "The full race event object. Got in the contructor"
					},
					"seasonEntrant": {
						"allOf": [
							{
								"$ref": "#/components/schemas/SeasonEntrant"
							}
						],
						"nullable": true
					},
					"entrantName": {
						"type": "string"
					},
					"chassisManufacturer": {
						"$ref": "#/components/schemas/Company"
					},
					"chassisName": {
						"type": "string"
					},
					"engineManufacturer": {
						"$ref": "#/components/schemas/Company"
					},
					"engineName": {
						"type": "string"
					},
					"tyreManufacturer": {
						"$ref": "#/components/schemas/TyreManufacturer"
					},
					"driverNumber": {
						"type": "number",
						"format": "double"
					},
					"note": {
						"type": "string"
					}
				},
				"required": [
					"driver",
					"race",
					"seasonEntrant",
					"entrantName",
					"chassisManufacturer",
					"chassisName",
					"engineManufacturer",
					"tyreManufacturer"
				],
				"type": "object",
				"additionalProperties": false
			},
			"EventEntrantQueryParams": {
				"properties": {
					"pageNo": {
						"type": "number",
						"format": "double",
						"description": "Page to retrieve, starting at 0",
						"default": "0"
					},
					"pageSize": {
						"type": "number",
						"format": "double",
						"description": "Size of the page to retrieve",
						"default": "10"
					},
					"orderDir": {
						"$ref": "#/components/schemas/OrderDir",
						"description": "Order of the results"
					},
					"chassisManufacturerId": {
						"type": "string",
						"description": "If specified, the call will return only the results where the company that has this ID appears as the chassis manufacturer"
					},
					"engineManufacturerId": {
						"type": "string",
						"description": "If specified, the call will return only the results where the company that has this ID appears as the  engine manufacturer"
					},
					"eventId": {
						"type": "string",
						"description": "If specified, it will return only results relative to the event that has this ID"
					},
					"year": {
						"type": "number",
						"format": "double",
						"description": "If specified, it will return only results relative to this year's events"
					},
					"driverId": {
						"type": "string",
						"description": "If specified, it will return only results relative to the pilot having this ID"
					},
					"orderBy": {
						"type": "string",
						"enum": [
							"chassisManufacturerId",
							"engineManufacturerId",
							"eventId",
							"driverId",
							"entrantName",
							"chassisName",
							"engineName",
							"driverNumber",
							"note",
							"seasonEntrantId",
							"tyreManufacturerId"
						],
						"nullable": false,
						"default": "eventId"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"RaceResult": {
				"properties": {
					"driver": {
						"$ref": "#/components/schemas/Driver",
						"description": "The full driver object. Got in the contructor"
					},
					"race": {
						"$ref": "#/components/schemas/Event",
						"description": "The full race event object. Got in the contructor"
					},
					"seasonEntrant": {
						"allOf": [
							{
								"$ref": "#/components/schemas/SeasonEntrant"
							}
						],
						"nullable": true
					},
					"entrantName": {
						"type": "string"
					},
					"chassisManufacturer": {
						"$ref": "#/components/schemas/Company"
					},
					"chassisName": {
						"type": "string"
					},
					"engineManufacturer": {
						"$ref": "#/components/schemas/Company"
					},
					"engineName": {
						"type": "string"
					},
					"tyreManufacturer": {
						"$ref": "#/components/schemas/TyreManufacturer"
					},
					"driverNumber": {
						"type": "number",
						"format": "double"
					},
					"note": {
						"type": "string"
					},
					"position": {
						"type": "number",
						"format": "double",
						"description": "Finishing position in the race, converted to number. Will be `nan` if the driver has not finished the race"
					},
					"positionText": {
						"anyOf": [
							{
								"type": "string"
							},
							{
								"type": "number",
								"format": "double"
							}
						],
						"description": "Finishing position in the race. Could be `DNF`, `DNQ`... if the driver has not finished the race"
					},
					"positionOrder": {
						"type": "number",
						"format": "double"
					},
					"laps": {
						"type": "number",
						"format": "double",
						"description": "Number of laps completed"
					},
					"time": {
						"type": "number",
						"format": "double"
					},
					"timePenalty": {
						"type": "string",
						"nullable": true
					},
					"gap": {
						"type": "string",
						"nullable": true
					},
					"reasonRetired": {
						"type": "string",
						"nullable": true
					},
					"points": {
						"type": "number",
						"format": "double",
						"description": "Points that this result awards the driver for the WDC"
					},
					"pointsGained": {
						"type": "number",
						"format": "double",
						"description": "Difference between the points that the driver has in the WDC at the end of this race and the ones he/she had after the previous scoring session (a race, a sprint race...). This number usually coincides with the points awarded for the result, except in some cases until 1990, where only the N best results were taken into account."
					},
					"pointsCountForWDC": {
						"type": "boolean",
						"description": "Whether or not the result counts for the final calculation of the WDC points (at the end of the year). It is usually true, except in some cases until 1990, where only the N best results were taken into account."
					},
					"gridPos": {
						"type": "string"
					},
					"positionsGained": {
						"type": "number",
						"format": "double",
						"description": "The positions gained during the race"
					}
				},
				"required": [
					"driver",
					"race",
					"seasonEntrant",
					"entrantName",
					"chassisManufacturer",
					"chassisName",
					"engineManufacturer",
					"tyreManufacturer",
					"position",
					"positionText",
					"positionOrder",
					"laps",
					"time",
					"timePenalty",
					"gap",
					"reasonRetired",
					"points",
					"pointsGained",
					"pointsCountForWDC",
					"gridPos"
				],
				"type": "object",
				"additionalProperties": false
			},
			"RaceResultQueryParams": {
				"properties": {
					"pageNo": {
						"type": "number",
						"format": "double",
						"description": "Page to retrieve, starting at 0",
						"default": "0"
					},
					"pageSize": {
						"type": "number",
						"format": "double",
						"description": "Size of the page to retrieve",
						"default": "10"
					},
					"orderDir": {
						"$ref": "#/components/schemas/OrderDir",
						"description": "Order of the results"
					},
					"chassisManufacturerId": {
						"type": "string",
						"description": "If specified, the call will return only the results where the company that has this ID appears as the chassis manufacturer"
					},
					"engineManufacturerId": {
						"type": "string",
						"description": "If specified, the call will return only the results where the company that has this ID appears as the  engine manufacturer"
					},
					"eventId": {
						"type": "string",
						"description": "If specified, it will return only results relative to the event that has this ID"
					},
					"year": {
						"type": "number",
						"format": "double",
						"description": "If specified, it will return only results relative to this year's events"
					},
					"driverId": {
						"type": "string",
						"description": "If specified, it will return only results relative to the pilot having this ID"
					},
					"gridPos": {
						"type": "string",
						"description": "Filter by a specific grid postion text"
					},
					"positionText": {
						"type": "string",
						"description": "Filter by a specific postion text, that can be `1`, `2`, `3`... or `DNF`, `DNS`..."
					},
					"minPos": {
						"type": "number",
						"format": "double",
						"description": "Look for the results where the driver achieved a position worse than or equal to this number."
					},
					"maxPos": {
						"type": "number",
						"format": "double",
						"description": "Look for the results where the driver achieved a position better than or equal to this number."
					},
					"orderBy": {
						"type": "string",
						"enum": [
							"chassisManufacturerId",
							"engineManufacturerId",
							"eventId",
							"driverId",
							"time",
							"laps",
							"entrantName",
							"chassisName",
							"engineName",
							"driverNumber",
							"note",
							"seasonEntrantId",
							"tyreManufacturerId",
							"gridPos",
							"positionText",
							"positionOrder",
							"position",
							"timePenalty",
							"gap",
							"reasonRetired",
							"points",
							"pointsGained",
							"pointsCountForWDC"
						],
						"nullable": false,
						"default": "eventId"
					}
				},
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "backend-f1",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/countries": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Country"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Countries"
				],
				"security": [],
				"parameters": []
			}
		},
		"/countries/{countryId}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Country"
								}
							}
						}
					}
				},
				"description": "Get a country by its ID",
				"tags": [
					"Countries"
				],
				"security": [],
				"parameters": [
					{
						"description": "The ID of the country to get",
						"in": "path",
						"name": "countryId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/circuits": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Circuit"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Circuits"
				],
				"security": [],
				"parameters": []
			}
		},
		"/circuits/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Circuit"
								}
							}
						}
					}
				},
				"description": "Get a circuit by its ID",
				"tags": [
					"Circuits"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/companies": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"items": {
											"items": {
												"$ref": "#/components/schemas/Company"
											},
											"type": "array"
										},
										"pageData": {
											"$ref": "#/components/schemas/PageMetadata"
										}
									},
									"required": [
										"items",
										"pageData"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Companies"
				],
				"security": [],
				"parameters": [
					{
						"description": "Page to retrieve, starting at 0",
						"in": "query",
						"name": "pageNo",
						"required": false,
						"schema": {
							"default": "0",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Size of the page to retrieve",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": "10",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Return only the companies that has manufactured in this specialty",
						"in": "query",
						"name": "specialty",
						"required": false,
						"schema": {
							"type": "string",
							"enum": [
								"engine",
								"chassis"
							]
						}
					}
				]
			}
		},
		"/companies/{companyId}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Company"
								}
							}
						}
					}
				},
				"description": "Get a company by its ID",
				"tags": [
					"Companies"
				],
				"security": [],
				"parameters": [
					{
						"description": "The ID of the driver to get",
						"in": "path",
						"name": "companyId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/drivers": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/Driver"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Drivers"
				],
				"security": [],
				"parameters": []
			}
		},
		"/drivers/{driverId}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Driver"
								}
							}
						}
					}
				},
				"description": "Get a driver by its ID",
				"tags": [
					"Drivers"
				],
				"security": [],
				"parameters": [
					{
						"description": "The ID of the driver to get",
						"in": "path",
						"name": "driverId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/drivers/{driverId}/seasons": {
			"get": {
				"operationId": "GetDriverSeasons",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"type": "number",
										"format": "double"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get the seasons where a specific driver has participated in at least one race or event",
				"tags": [
					"Drivers"
				],
				"security": [],
				"parameters": [
					{
						"description": "The ID of the driver to get",
						"in": "path",
						"name": "driverId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If 'entrants' is selected here, it will return also the season where the driver has participated in free practices and other not computable sessions for the WDC. The 'race' will only take into account the race entrants",
						"in": "query",
						"name": "from",
						"required": false,
						"schema": {
							"default": "races",
							"type": "string",
							"enum": [
								"entrants",
								"races"
							]
						}
					}
				]
			}
		},
		"/drivers/{driverId}/championship-results": {
			"get": {
				"operationId": "GetChampionshipResults",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"results": {
											"items": {
												"properties": {
													"points": {
														"type": "number",
														"format": "double"
													},
													"position": {
														"type": "number",
														"format": "double"
													},
													"season": {
														"type": "number",
														"format": "double"
													}
												},
												"required": [
													"points",
													"position",
													"season"
												],
												"type": "object"
											},
											"type": "array"
										},
										"driver": {
											"$ref": "#/components/schemas/Driver"
										}
									},
									"required": [
										"results",
										"driver"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Get WDC results of this driver",
				"tags": [
					"Drivers"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "driverId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/free-practices/{session}/results": {
			"get": {
				"operationId": "GetSessionsResults",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"items": {
											"items": {
												"$ref": "#/components/schemas/TimedSessionResult"
											},
											"type": "array"
										},
										"pageData": {
											"$ref": "#/components/schemas/PageMetadata"
										}
									},
									"required": [
										"items",
										"pageData"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Return driver results of a specific practice session based on some filters",
				"tags": [
					"Free Practices"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "session",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"fp1",
								"fp2",
								"fp3",
								"fp4",
								"warm-up"
							]
						}
					},
					{
						"description": "Page to retrieve, starting at 0",
						"in": "query",
						"name": "pageNo",
						"required": false,
						"schema": {
							"default": "0",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Size of the page to retrieve",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": "10",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Order of the results",
						"in": "query",
						"name": "orderDir",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/OrderDir"
						}
					},
					{
						"description": "Page to retrieve, starting at 0",
						"in": "query",
						"name": "pageNo",
						"required": false,
						"schema": {
							"default": "0",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Size of the page to retrieve",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": "10",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Order of the results",
						"in": "query",
						"name": "orderDir",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/OrderDir"
						}
					},
					{
						"description": "If specified, the call will return only the results where the company that has this ID appears as the chassis manufacturer",
						"in": "query",
						"name": "chassisManufacturerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, the call will return only the results where the company that has this ID appears as the  engine manufacturer",
						"in": "query",
						"name": "engineManufacturerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, it will return only results relative to the event that has this ID",
						"in": "query",
						"name": "eventId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, it will return only results relative to this year's events",
						"in": "query",
						"name": "year",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "If specified, it will return only results relative to the pilot having this ID",
						"in": "query",
						"name": "driverId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "pos",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"required": false,
						"schema": {
							"default": "eventId",
							"type": "string",
							"enum": [
								"chassisManufacturerId",
								"engineManufacturerId",
								"pos",
								"eventId",
								"driverId",
								"time",
								"laps",
								"entrantName",
								"chassisName",
								"engineName",
								"driverNumber",
								"note",
								"seasonEntrantId",
								"tyreManufacturerId"
							]
						}
					}
				]
			}
		},
		"/free-practices/{session}/results/{eventId}": {
			"get": {
				"operationId": "GetSessionResults",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/TimedSessionResult"
									},
									"type": "array"
								}
							}
						}
					},
					"404": {
						"description": "Register not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorMessage_404_"
								}
							}
						}
					}
				},
				"description": "Gets the results of a certain session of free practice",
				"tags": [
					"Free Practices"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "session",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"fp1",
								"fp2",
								"fp3",
								"fp4",
								"warm-up"
							]
						}
					},
					{
						"in": "path",
						"name": "eventId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/free-practices/{session}/results/{eventId}/{driverId}": {
			"get": {
				"operationId": "GetDriverSessionResult",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TimedSessionResult"
								}
							}
						}
					},
					"404": {
						"description": "Register not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorMessage_404_"
								}
							}
						}
					}
				},
				"description": "Gets info about the result obtained by a driver in a certain session of free practice",
				"tags": [
					"Free Practices"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "session",
						"required": true,
						"schema": {
							"type": "string",
							"enum": [
								"fp1",
								"fp2",
								"fp3",
								"fp4",
								"warm-up"
							]
						}
					},
					{
						"in": "path",
						"name": "eventId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "driverId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/grands-prix": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/GrandPrix"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Grands Prix"
				],
				"security": [],
				"parameters": []
			}
		},
		"/grands-prix/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/GrandPrix"
								}
							}
						}
					}
				},
				"tags": [
					"Grands Prix"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/races/laps": {
			"get": {
				"operationId": "GetLaps",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"items": {
											"items": {
												"$ref": "#/components/schemas/LapTime"
											},
											"type": "array"
										},
										"pageData": {
											"$ref": "#/components/schemas/PageMetadata"
										}
									},
									"required": [
										"items",
										"pageData"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Races"
				],
				"security": [],
				"parameters": [
					{
						"description": "Page to retrieve, starting at 0",
						"in": "query",
						"name": "pageNo",
						"required": false,
						"schema": {
							"default": "0",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Size of the page to retrieve",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": "10",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Order of the results",
						"in": "query",
						"name": "orderDir",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/OrderDir"
						}
					},
					{
						"description": "Page to retrieve, starting at 0",
						"in": "query",
						"name": "pageNo",
						"required": false,
						"schema": {
							"default": "0",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Size of the page to retrieve",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": "10",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Order of the results",
						"in": "query",
						"name": "orderDir",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/OrderDir"
						}
					},
					{
						"description": "If specified, the call will return only the results where the company that has this ID appears as the chassis manufacturer",
						"in": "query",
						"name": "chassisManufacturerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, the call will return only the results where the company that has this ID appears as the  engine manufacturer",
						"in": "query",
						"name": "engineManufacturerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, it will return only results relative to the event that has this ID",
						"in": "query",
						"name": "eventId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, it will return only results relative to this year's events",
						"in": "query",
						"name": "year",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "If specified, it will return only results relative to the pilot having this ID",
						"in": "query",
						"name": "driverId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "pos",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "lap",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"required": false,
						"schema": {
							"default": "eventId",
							"type": "string",
							"enum": [
								"chassisManufacturerId",
								"engineManufacturerId",
								"pos",
								"eventId",
								"driverId",
								"time",
								"entrantName",
								"chassisName",
								"engineName",
								"driverNumber",
								"note",
								"seasonEntrantId",
								"tyreManufacturerId",
								"lap"
							]
						}
					}
				]
			}
		},
		"/races/fastest-laps": {
			"get": {
				"operationId": "GetFastestLaps",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"items": {
											"items": {
												"$ref": "#/components/schemas/LapTime"
											},
											"type": "array"
										},
										"pageData": {
											"$ref": "#/components/schemas/PageMetadata"
										}
									},
									"required": [
										"items",
										"pageData"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Races"
				],
				"security": [],
				"parameters": [
					{
						"description": "Page to retrieve, starting at 0",
						"in": "query",
						"name": "pageNo",
						"required": false,
						"schema": {
							"default": "0",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Size of the page to retrieve",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": "10",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Order of the results",
						"in": "query",
						"name": "orderDir",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/OrderDir"
						}
					},
					{
						"description": "Page to retrieve, starting at 0",
						"in": "query",
						"name": "pageNo",
						"required": false,
						"schema": {
							"default": "0",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Size of the page to retrieve",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": "10",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Order of the results",
						"in": "query",
						"name": "orderDir",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/OrderDir"
						}
					},
					{
						"description": "If specified, the call will return only the results where the company that has this ID appears as the chassis manufacturer",
						"in": "query",
						"name": "chassisManufacturerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, the call will return only the results where the company that has this ID appears as the  engine manufacturer",
						"in": "query",
						"name": "engineManufacturerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, it will return only results relative to the event that has this ID",
						"in": "query",
						"name": "eventId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, it will return only results relative to this year's events",
						"in": "query",
						"name": "year",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "If specified, it will return only results relative to the pilot having this ID",
						"in": "query",
						"name": "driverId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "pos",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "lap",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"required": false,
						"schema": {
							"default": "eventId",
							"type": "string",
							"enum": [
								"chassisManufacturerId",
								"engineManufacturerId",
								"pos",
								"eventId",
								"driverId",
								"time",
								"entrantName",
								"chassisName",
								"engineName",
								"driverNumber",
								"note",
								"seasonEntrantId",
								"tyreManufacturerId",
								"lap"
							]
						}
					}
				]
			}
		},
		"/races/fastest-laps/{eventId}": {
			"get": {
				"operationId": "GetEventFastestLap",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/LapTime"
								}
							}
						}
					}
				},
				"description": "Get the fastest lap of a race event",
				"tags": [
					"Races"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "eventId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/races/pit-stops": {
			"get": {
				"operationId": "GetPitStops",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"items": {
											"items": {
												"$ref": "#/components/schemas/PitStop"
											},
											"type": "array"
										},
										"pageData": {
											"$ref": "#/components/schemas/PageMetadata"
										}
									},
									"required": [
										"items",
										"pageData"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Races"
				],
				"security": [],
				"parameters": [
					{
						"description": "Page to retrieve, starting at 0",
						"in": "query",
						"name": "pageNo",
						"required": false,
						"schema": {
							"default": "0",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Size of the page to retrieve",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": "10",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Order of the results",
						"in": "query",
						"name": "orderDir",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/OrderDir"
						}
					},
					{
						"description": "Page to retrieve, starting at 0",
						"in": "query",
						"name": "pageNo",
						"required": false,
						"schema": {
							"default": "0",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Size of the page to retrieve",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": "10",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Order of the results",
						"in": "query",
						"name": "orderDir",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/OrderDir"
						}
					},
					{
						"description": "If specified, the call will return only the results where the company that has this ID appears as the chassis manufacturer",
						"in": "query",
						"name": "chassisManufacturerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, the call will return only the results where the company that has this ID appears as the  engine manufacturer",
						"in": "query",
						"name": "engineManufacturerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, it will return only results relative to the event that has this ID",
						"in": "query",
						"name": "eventId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, it will return only results relative to this year's events",
						"in": "query",
						"name": "year",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "If specified, it will return only results relative to the pilot having this ID",
						"in": "query",
						"name": "driverId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "lap",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"required": false,
						"schema": {
							"default": "eventId",
							"type": "string",
							"enum": [
								"chassisManufacturerId",
								"engineManufacturerId",
								"eventId",
								"driverId",
								"time",
								"entrantName",
								"chassisName",
								"engineName",
								"driverNumber",
								"note",
								"seasonEntrantId",
								"tyreManufacturerId",
								"pitStopLap",
								"timeOfDay",
								"annotation"
							]
						}
					}
				]
			}
		},
		"/events": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"items": {
											"items": {
												"$ref": "#/components/schemas/Event"
											},
											"type": "array"
										},
										"pageData": {
											"$ref": "#/components/schemas/PageMetadata"
										}
									},
									"required": [
										"items",
										"pageData"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Get events based on some params",
				"tags": [
					"Events"
				],
				"security": [],
				"parameters": [
					{
						"description": "Page to retrieve, starting at 0",
						"in": "query",
						"name": "pageNo",
						"required": false,
						"schema": {
							"default": "0",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Size of the page to retrieve",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": "10",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Order of the results",
						"in": "query",
						"name": "orderDir",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/OrderDir"
						}
					},
					{
						"in": "query",
						"name": "circuitId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "year",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"required": false,
						"schema": {
							"default": "id",
							"type": "string",
							"enum": [
								"id",
								"name",
								"raceDate",
								"scheduledLaps",
								"qualyFormat",
								"posterURL",
								"circuitId",
								"grandPrixId"
							]
						}
					}
				]
			}
		},
		"/events/{eventId}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Event"
								}
							}
						}
					}
				},
				"description": "Get a event by its ID",
				"tags": [
					"Events"
				],
				"security": [],
				"parameters": [
					{
						"description": "The ID of the event to get",
						"in": "path",
						"name": "eventId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/tyre-manufacturers": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/TyreManufacturer"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"tags": [
					"Tyre Manufacturers"
				],
				"security": [],
				"parameters": []
			}
		},
		"/tyre-manufacturers/{id}": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TyreManufacturer"
								}
							}
						}
					}
				},
				"description": "Get a tyre manufacturer by its ID",
				"tags": [
					"Tyre Manufacturers"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/event-entrants": {
			"get": {
				"operationId": "GetEventEntrants",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"items": {
											"items": {
												"$ref": "#/components/schemas/EventDriverData"
											},
											"type": "array"
										},
										"pageData": {
											"$ref": "#/components/schemas/PageMetadata"
										}
									},
									"required": [
										"items",
										"pageData"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"Event Entrants"
				],
				"security": [],
				"parameters": [
					{
						"description": "Page to retrieve, starting at 0",
						"in": "query",
						"name": "pageNo",
						"required": false,
						"schema": {
							"default": "0",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Size of the page to retrieve",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": "10",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Order of the results",
						"in": "query",
						"name": "orderDir",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/OrderDir"
						}
					},
					{
						"description": "If specified, the call will return only the results where the company that has this ID appears as the chassis manufacturer",
						"in": "query",
						"name": "chassisManufacturerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, the call will return only the results where the company that has this ID appears as the  engine manufacturer",
						"in": "query",
						"name": "engineManufacturerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, it will return only results relative to the event that has this ID",
						"in": "query",
						"name": "eventId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, it will return only results relative to this year's events",
						"in": "query",
						"name": "year",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "If specified, it will return only results relative to the pilot having this ID",
						"in": "query",
						"name": "driverId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"required": false,
						"schema": {
							"default": "eventId",
							"type": "string",
							"enum": [
								"chassisManufacturerId",
								"engineManufacturerId",
								"eventId",
								"driverId",
								"entrantName",
								"chassisName",
								"engineName",
								"driverNumber",
								"note",
								"seasonEntrantId",
								"tyreManufacturerId"
							]
						}
					}
				]
			}
		},
		"/races/results": {
			"get": {
				"operationId": "GetRacesResults",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"items": {
											"items": {
												"$ref": "#/components/schemas/RaceResult"
											},
											"type": "array"
										},
										"pageData": {
											"$ref": "#/components/schemas/PageMetadata"
										}
									},
									"required": [
										"items",
										"pageData"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Get driver race results based on some filters",
				"tags": [
					"Races"
				],
				"security": [],
				"parameters": [
					{
						"description": "Page to retrieve, starting at 0",
						"in": "query",
						"name": "pageNo",
						"required": false,
						"schema": {
							"default": "0",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Size of the page to retrieve",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": "10",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Order of the results",
						"in": "query",
						"name": "orderDir",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/OrderDir"
						}
					},
					{
						"description": "Page to retrieve, starting at 0",
						"in": "query",
						"name": "pageNo",
						"required": false,
						"schema": {
							"default": "0",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Size of the page to retrieve",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": "10",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Order of the results",
						"in": "query",
						"name": "orderDir",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/OrderDir"
						}
					},
					{
						"description": "If specified, the call will return only the results where the company that has this ID appears as the chassis manufacturer",
						"in": "query",
						"name": "chassisManufacturerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, the call will return only the results where the company that has this ID appears as the  engine manufacturer",
						"in": "query",
						"name": "engineManufacturerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, it will return only results relative to the event that has this ID",
						"in": "query",
						"name": "eventId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, it will return only results relative to this year's events",
						"in": "query",
						"name": "year",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "If specified, it will return only results relative to the pilot having this ID",
						"in": "query",
						"name": "driverId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Filter by a specific grid postion text",
						"in": "query",
						"name": "gridPos",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Filter by a specific postion text, that can be `1`, `2`, `3`... or `DNF`, `DNS`...",
						"in": "query",
						"name": "positionText",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Look for the results where the driver achieved a position worse than or equal to this number.",
						"in": "query",
						"name": "minPos",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Look for the results where the driver achieved a position better than or equal to this number.",
						"in": "query",
						"name": "maxPos",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"required": false,
						"schema": {
							"default": "eventId",
							"type": "string",
							"enum": [
								"chassisManufacturerId",
								"engineManufacturerId",
								"eventId",
								"driverId",
								"time",
								"laps",
								"entrantName",
								"chassisName",
								"engineName",
								"driverNumber",
								"note",
								"seasonEntrantId",
								"tyreManufacturerId",
								"gridPos",
								"positionText",
								"positionOrder",
								"position",
								"timePenalty",
								"gap",
								"reasonRetired",
								"points",
								"pointsGained",
								"pointsCountForWDC"
							]
						}
					}
				]
			}
		},
		"/races/results/{eventId}": {
			"get": {
				"operationId": "GetRaceResults",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/RaceResult"
									},
									"type": "array"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorMessage_404_"
								}
							}
						}
					}
				},
				"description": "Gets info about the results of a certain race",
				"tags": [
					"Races"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "eventId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/races/results/{eventId}/{driverId}": {
			"get": {
				"operationId": "GetDriverRaceResult",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RaceResult"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorMessage_404_"
								}
							}
						}
					}
				},
				"description": "Gets info about the result obtained by a driver in a certain race",
				"tags": [
					"Races"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "eventId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "driverId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/championships/{season}/drivers": {
			"get": {
				"operationId": "GetDriverChampionshipResults",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"properties": {
											"totalPoints": {
												"type": "number",
												"format": "double"
											},
											"points": {
												"type": "number",
												"format": "double"
											},
											"driver": {
												"$ref": "#/components/schemas/Driver"
											},
											"position": {
												"type": "number",
												"format": "double"
											}
										},
										"required": [
											"totalPoints",
											"points",
											"driver",
											"position"
										],
										"type": "object"
									},
									"type": "array"
								}
							}
						}
					}
				},
				"description": "Get the driver's world championship results for the specified season",
				"tags": [
					"Championships"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "season",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "If specified, the result obtained will be the championship situation immediately after that round.",
						"in": "query",
						"name": "round",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/championships/{season}/drivers/{driverId}": {
			"get": {
				"operationId": "GetDriverChampionshipResult",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"totalPoints": {
											"type": "number",
											"format": "double"
										},
										"points": {
											"type": "number",
											"format": "double"
										},
										"driver": {
											"$ref": "#/components/schemas/Driver"
										},
										"position": {
											"type": "number",
											"format": "double"
										}
									},
									"required": [
										"totalPoints",
										"points",
										"driver",
										"position"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Get the driver's world championship result for a specified season and driver",
				"tags": [
					"Championships"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "season",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "path",
						"name": "driverId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, the result obtained will be the championship situation of the driver immediately after that round.",
						"in": "query",
						"name": "round",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/pre-qualifyings/results": {
			"get": {
				"operationId": "GetPreQualifyingsResults",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"items": {
											"items": {
												"$ref": "#/components/schemas/TimedSessionResult"
											},
											"type": "array"
										},
										"pageData": {
											"$ref": "#/components/schemas/PageMetadata"
										}
									},
									"required": [
										"items",
										"pageData"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Return driver results of a specific pre-qualifying session based on some filters",
				"tags": [
					"Pre-Qualifying"
				],
				"security": [],
				"parameters": [
					{
						"description": "Page to retrieve, starting at 0",
						"in": "query",
						"name": "pageNo",
						"required": false,
						"schema": {
							"default": "0",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Size of the page to retrieve",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": "10",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Order of the results",
						"in": "query",
						"name": "orderDir",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/OrderDir"
						}
					},
					{
						"description": "Page to retrieve, starting at 0",
						"in": "query",
						"name": "pageNo",
						"required": false,
						"schema": {
							"default": "0",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Size of the page to retrieve",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": "10",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Order of the results",
						"in": "query",
						"name": "orderDir",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/OrderDir"
						}
					},
					{
						"description": "If specified, the call will return only the results where the company that has this ID appears as the chassis manufacturer",
						"in": "query",
						"name": "chassisManufacturerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, the call will return only the results where the company that has this ID appears as the  engine manufacturer",
						"in": "query",
						"name": "engineManufacturerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, it will return only results relative to the event that has this ID",
						"in": "query",
						"name": "eventId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, it will return only results relative to this year's events",
						"in": "query",
						"name": "year",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "If specified, it will return only results relative to the pilot having this ID",
						"in": "query",
						"name": "driverId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "pos",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"required": false,
						"schema": {
							"default": "eventId",
							"type": "string",
							"enum": [
								"chassisManufacturerId",
								"engineManufacturerId",
								"pos",
								"eventId",
								"driverId",
								"time",
								"laps",
								"entrantName",
								"chassisName",
								"engineName",
								"driverNumber",
								"note",
								"seasonEntrantId",
								"tyreManufacturerId"
							]
						}
					}
				]
			}
		},
		"/pre-qualifyings/results/{eventId}": {
			"get": {
				"operationId": "GetSessionResults",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/TimedSessionResult"
									},
									"type": "array"
								}
							}
						}
					},
					"404": {
						"description": "Register not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorMessage_404_"
								}
							}
						}
					}
				},
				"description": "Gets the results of a certain pre-qualifying",
				"tags": [
					"Pre-Qualifying"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "eventId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/pre-qualifyings/results/{eventId}/{driverId}": {
			"get": {
				"operationId": "GetDriverSessionResult",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/TimedSessionResult"
								}
							}
						}
					},
					"404": {
						"description": "Register not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorMessage_404_"
								}
							}
						}
					}
				},
				"description": "Gets info about the result obtained by a driver in a pre-qualifying session",
				"tags": [
					"Pre-Qualifying"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "eventId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "driverId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/sprint-qualifyings/results": {
			"get": {
				"operationId": "GetSprintQualifyingsResults",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"items": {
											"items": {
												"$ref": "#/components/schemas/RaceResult"
											},
											"type": "array"
										},
										"pageData": {
											"$ref": "#/components/schemas/PageMetadata"
										}
									},
									"required": [
										"items",
										"pageData"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Get driver sprint qualifyings results based on some filters",
				"tags": [
					"Sprint Qualifyings"
				],
				"security": [],
				"parameters": [
					{
						"description": "Page to retrieve, starting at 0",
						"in": "query",
						"name": "pageNo",
						"required": false,
						"schema": {
							"default": "0",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Size of the page to retrieve",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": "10",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Order of the results",
						"in": "query",
						"name": "orderDir",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/OrderDir"
						}
					},
					{
						"description": "Page to retrieve, starting at 0",
						"in": "query",
						"name": "pageNo",
						"required": false,
						"schema": {
							"default": "0",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Size of the page to retrieve",
						"in": "query",
						"name": "pageSize",
						"required": false,
						"schema": {
							"default": "10",
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Order of the results",
						"in": "query",
						"name": "orderDir",
						"required": false,
						"schema": {
							"$ref": "#/components/schemas/OrderDir"
						}
					},
					{
						"description": "If specified, the call will return only the results where the company that has this ID appears as the chassis manufacturer",
						"in": "query",
						"name": "chassisManufacturerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, the call will return only the results where the company that has this ID appears as the  engine manufacturer",
						"in": "query",
						"name": "engineManufacturerId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, it will return only results relative to the event that has this ID",
						"in": "query",
						"name": "eventId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "If specified, it will return only results relative to this year's events",
						"in": "query",
						"name": "year",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "If specified, it will return only results relative to the pilot having this ID",
						"in": "query",
						"name": "driverId",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Filter by a specific grid postion text",
						"in": "query",
						"name": "gridPos",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Filter by a specific postion text, that can be `1`, `2`, `3`... or `DNF`, `DNS`...",
						"in": "query",
						"name": "positionText",
						"required": false,
						"schema": {
							"type": "string"
						}
					},
					{
						"description": "Look for the results where the driver achieved a position worse than or equal to this number.",
						"in": "query",
						"name": "minPos",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"description": "Look for the results where the driver achieved a position better than or equal to this number.",
						"in": "query",
						"name": "maxPos",
						"required": false,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "orderBy",
						"required": false,
						"schema": {
							"default": "eventId",
							"type": "string",
							"enum": [
								"chassisManufacturerId",
								"engineManufacturerId",
								"eventId",
								"driverId",
								"time",
								"laps",
								"entrantName",
								"chassisName",
								"engineName",
								"driverNumber",
								"note",
								"seasonEntrantId",
								"tyreManufacturerId",
								"gridPos",
								"positionText",
								"positionOrder",
								"position",
								"timePenalty",
								"gap",
								"reasonRetired",
								"points",
								"pointsGained",
								"pointsCountForWDC"
							]
						}
					}
				]
			}
		},
		"/sprint-qualifyings/results/{eventId}": {
			"get": {
				"operationId": "GetSprintQualifyingResults",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/RaceResult"
									},
									"type": "array"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorMessage_404_"
								}
							}
						}
					}
				},
				"description": "Gets info about the results of a certain sprint qualifying",
				"tags": [
					"Sprint Qualifyings"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "eventId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/sprint-qualifyings/results/{eventId}/{driverId}": {
			"get": {
				"operationId": "GetDriverRaceResult",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/RaceResult"
								}
							}
						}
					},
					"404": {
						"description": "",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/ErrorMessage_404_"
								}
							}
						}
					}
				},
				"description": "Gets info about the result obtained by a driver in a certain sprint qualifying",
				"tags": [
					"Sprint Qualifyings"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "eventId",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "path",
						"name": "driverId",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}